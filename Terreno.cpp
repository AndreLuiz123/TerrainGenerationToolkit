#include "Terreno.h"

#include <iostream>
#include <time.h>
#include <GL/gl.h>
#include <GL/glu.h>
#include <GL/glut.h>
#include <math.h>
#include <fstream>
#include <random>
#include "Erosao.h"
#define IX(i,j) ((i)+(N)*(j))
#define PI 3.14159265

Terreno::Terreno(){

    this->N = 64;
    alturas = vector<Vetor>(N*N);
    inicializaAlturas();
    hillAlgorithm(5);

}

Terreno::Terreno(int N, int numberHills){
    srand ( time(NULL) );
    this->N = N;
    alturas = vector<Vetor>(N*N);
    alturasY = vector<float>(N*N);
    alturas0 = vector<Vetor>(N*N);
    alturasY0 = vector<float>(N*N);
    inicializaAlturas();
    //if(numberHills>0)
    //faulting(numberHills);
    //hillAlgorithm(1);
    //diamond(numberHills);
    //perlinNoise();
    //cubo();
    //terrenao();
    //variosCubos();
    //cubosUnidos();
    terrenoTeste();
}

void Terreno::terrenoTeste(){
cout<<"falulting 1"<<endl;

float v[64*64] = {1.94414 , 1.94414 , 1.94414 , 1.94414 , 2.06395 , 2.2202 , 2.42886 , 2.72563 , 3.09362 , 3.48762 , 3.81576 , 3.99282 , 4.00778 , 4.00778 , 4.00778 , 4.00778 , 3.93273 , 3.93273 , 3.93273 , 3.93273 , 3.93273 , 3.93273 , 3.88657 , 3.64643 , 3.22295 , 2.97492 , 2.93656 , 2.93656 , 2.93656 , 2.93909 , 3.08715 , 3.58412 , 4.33525 , 4.84919 , 4.99767 , 4.99939 , 4.99939 , 4.98922 , 4.76275 , 4.08077 , 3.09773 , 2.38872 , 2.18166 , 2.1755 , 2.1755 , 2.1764 , 2.30902 , 2.95326 , 4.02396 , 4.67747 , 4.81366 , 4.81437 , 4.81437 , 4.81437 , 4.81437 , 4.81437 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 1.94414 , 1.94414 , 1.94414 , 1.94414 , 2.07969 , 2.23628 , 2.44632 , 2.73195 , 3.08054 , 3.44961 , 3.77445 , 3.98326 , 4.00778 , 4.00778 , 4.00778 , 4.00778 , 3.93273 , 3.93273 , 3.93273 , 3.93273 , 3.93273 , 3.93273 , 3.86726 , 3.59686 , 3.27972 , 2.99417 , 2.93656 , 2.93656 , 2.93656 , 2.94231 , 3.14493 , 3.6701 , 4.24888 , 4.79912 , 4.99563 , 4.99939 , 4.99939 , 4.98237 , 4.68971 , 3.98059 , 3.2056 , 2.47176 , 2.18695 , 2.1755 , 2.1755 , 2.1777 , 2.3694 , 3.08153 , 3.89693 , 4.62422 , 4.81275 , 4.81437 , 4.81437 , 4.81437 , 4.81437 , 4.81437 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 1.94414 , 1.94414 , 1.94414 , 1.94085 , 2.08925 , 2.2486 , 2.45839 , 2.739 , 3.07714 , 3.44108 , 3.76822 , 3.97724 , 4.00778 , 4.00778 , 4.00778 , 4.00778 , 3.93273 , 3.93273 , 3.93273 , 3.93273 , 3.93273 , 3.93273 , 3.86357 , 3.61348 , 3.26701 , 3.00023 , 2.93656 , 2.93656 , 2.93656 , 2.94495 , 3.15759 , 3.65358 , 4.27941 , 4.79233 , 4.99401 , 4.99939 , 4.99939 , 4.97992 , 4.68045 , 4.01624 , 3.18881 , 2.48886 , 2.19018 , 2.1755 , 2.1755 , 2.17876 , 2.38458 , 3.0556 , 3.93781 , 4.61619 , 4.81205 , 4.81437 , 4.81437 , 4.81437 , 4.81437 , 4.81437 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 2.00581 , 2.00581 , 1.9829 , 1.99714 , 2.09986 , 2.26607 , 2.47253 , 2.75099 , 3.08329 , 3.44357 , 3.76854 , 3.97721 , 4.00778 , 4.00778 , 4.00778 , 4.00778 , 3.93273 , 3.93273 , 3.93273 , 3.93273 , 3.93273 , 3.93273 , 3.86743 , 3.61145 , 3.26471 , 2.99707 , 2.93656 , 2.93656 , 2.93656 , 2.94519 , 3.14785 , 3.65135 , 4.27557 , 4.80236 , 4.99411 , 4.99939 , 4.99939 , 4.98003 , 4.69345 , 4.01085 , 3.18387 , 2.47554 , 2.19028 , 2.1755 , 2.1755 , 2.1789 , 2.37536 , 3.05038 , 3.93296 , 4.62588 , 4.81207 , 4.81437 , 4.81437 , 4.81437 , 4.81437 , 4.81437 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 2.14068 , 2.13152 , 2.13698 , 2.13879 , 2.15741 , 2.3137 , 2.5201 , 2.77091 , 3.09754 , 3.45011 , 3.77286 , 3.97794 , 4.00778 , 4.00778 , 4.00778 , 4.00778 , 3.93273 , 3.93273 , 3.93273 , 3.93273 , 3.93273 , 3.93273 , 3.86744 , 3.61093 , 3.26421 , 2.99641 , 2.93656 , 2.93656 , 2.93656 , 2.94455 , 3.14807 , 3.65146 , 4.27746 , 4.80243 , 4.99349 , 4.99939 , 4.99939 , 4.98061 , 4.69426 , 4.01011 , 3.18166 , 2.47292 , 2.18957 , 2.1755 , 2.1755 , 2.17872 , 2.37377 , 3.0492 , 3.93187 , 4.62593 , 4.81236 , 4.81437 , 4.81437 , 4.81437 , 4.81437 , 4.81437 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 2.28082 , 2.28628 , 2.28657 , 2.29335 , 2.29603 , 2.38608 , 2.57328 , 2.82277 , 3.11845 , 3.4601 , 3.76973 , 3.97525 , 4.00778 , 4.00778 , 4.00778 , 4.00778 , 3.93273 , 3.93273 , 3.93273 , 3.93273 , 3.93273 , 3.93273 , 3.86766 , 3.61174 , 3.2644 , 2.99703 , 2.93656 , 2.93656 , 2.93656 , 2.94313 , 3.14481 , 3.64564 , 4.26835 , 4.77746 , 4.98439 , 4.99939 , 4.99934 , 4.9711 , 4.68311 , 4.00637 , 3.17894 , 2.47263 , 2.19041 , 2.1755 , 2.1755 , 2.18023 , 2.37851 , 3.05281 , 3.93531 , 4.62702 , 4.8125 , 4.81437 , 4.81437 , 4.81437 , 4.81437 , 4.81437 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 2.43138 , 2.43652 , 2.4425 , 2.4433 , 2.45044 , 2.51023 , 2.66655 , 2.8857 , 3.15082 , 3.46209 , 3.75427 , 3.91376 , 3.93735 , 3.94578 , 3.96463 , 3.9765 , 3.93273 , 3.93273 , 3.93273 , 3.93273 , 3.93273 , 3.93273 , 3.86945 , 3.61404 , 3.27206 , 3.00016 , 2.93656 , 2.93656 , 2.93656 , 2.94319 , 3.12158 , 3.614 , 4.17487 , 4.652 , 4.84452 , 4.8792 , 4.88207 , 4.84085 , 4.59026 , 3.97633 , 3.17816 , 2.50287 , 2.26122 , 2.24018 , 2.23817 , 2.24764 , 2.43694 , 3.09151 , 3.9483 , 4.63262 , 4.81118 , 4.81437 , 4.81437 , 4.81437 , 4.81437 , 4.81437 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 4.72507 , 2.57786 , 2.58544 , 2.59262 , 2.59886 , 2.60558 , 2.6524 , 2.77623 , 2.95835 , 3.1984 , 3.44761 , 3.65665 , 3.74359 , 3.76315 , 3.77057 , 3.78008 , 3.8087 , 3.8509 , 3.91641 , 3.93273 , 3.93273 , 3.93273 , 3.93273 , 3.8666 , 3.62887 , 3.29452 , 3.08301 , 3.02655 , 3.02341 , 3.02257 , 3.02465 , 3.13787 , 3.50413 , 4.02141 , 4.30741 , 4.42657 , 4.43586 , 4.43773 , 4.43031 , 4.27517 , 3.88249 , 3.19872 , 2.8052 , 2.66382 , 2.64646 , 2.64384 , 2.65615 , 2.7914 , 3.24777 , 4.01281 , 4.59063 , 4.74636 , 4.7484 , 4.7487 , 4.7493 , 4.74948 , 4.73616 , 4.67067 , 4.66811 , 4.66823 , 4.66855 , 4.66891 , 4.6693 , 4.66796 , 4.68516 , 2.71517 , 2.73283 , 2.74165 , 2.74914 , 2.76109 , 2.80794 , 2.88614 , 3.04235 , 3.21506 , 3.41061 , 3.51368 , 3.53745 , 3.54995 , 3.54967 , 3.56746 , 3.61425 , 3.72483 , 3.81251 , 3.81251 , 3.81251 , 3.81251 , 3.81251 , 3.80188 , 3.62192 , 3.42392 , 3.26232 , 3.23495 , 3.23381 , 3.23483 , 3.24221 , 3.28533 , 3.48461 , 3.66662 , 3.81167 , 3.85176 , 3.85216 , 3.85011 , 3.84129 , 3.79023 , 3.62932 , 3.47391 , 3.31532 , 3.25957 , 3.25318 , 3.256 , 3.26683 , 3.35761 , 3.62625 , 4.04375 , 4.41504 , 4.45359 , 4.44806 , 4.44716 , 4.44673 , 4.44899 , 4.44321 , 4.37587 , 4.36604 , 4.3653 , 4.36493 , 4.36459 , 4.36462 , 4.36557 , 4.348 , 2.84662 , 2.87092 , 2.88847 , 2.89824 , 2.91584 , 2.96148 , 3.0372 , 3.11754 , 3.25437 , 3.33443 , 3.35769 , 3.37015 , 3.37342 , 3.37112 , 3.3785 , 3.48427 , 3.66566 , 3.81011 , 3.81251 , 3.81251 , 3.81251 , 3.81251 , 3.80558 , 3.6715 , 3.46344 , 3.3205 , 3.3205 , 3.3205 , 3.3205 , 3.3205 , 3.32532 , 3.34179 , 3.34971 , 3.3887 , 3.40573 , 3.40366 , 3.39972 , 3.39325 , 3.38071 , 3.42141 , 3.63796 , 3.66967 , 3.65982 , 3.65911 , 3.66056 , 3.66526 , 3.68834 , 3.85414 , 4.20231 , 4.36982 , 4.38148 , 4.38148 , 4.38148 , 4.38148 , 4.38148 , 4.38148 , 4.30842 , 4.30842 , 4.30842 , 4.30842 , 4.30842 , 4.30842 , 4.30842 , 4.30842 , 2.98535 , 3.00223 , 3.02659 , 3.0442 , 3.0674 , 3.11298 , 3.17524 , 3.25486 , 3.28837 , 3.30589 , 3.30589 , 3.30589 , 3.30589 , 3.30589 , 3.31429 , 3.47056 , 3.65061 , 3.80767 , 3.81251 , 3.81251 , 3.81251 , 3.81251 , 3.81251 , 3.6761 , 3.45895 , 3.3205 , 3.3205 , 3.3205 , 3.3205 , 3.3205 , 3.3205 , 3.3205 , 3.28122 , 3.28122 , 3.28122 , 3.28122 , 3.28122 , 3.28122 , 3.28122 , 3.36477 , 3.64196 , 3.72244 , 3.72244 , 3.72244 , 3.72244 , 3.72244 , 3.72244 , 3.86566 , 4.2461 , 4.38062 , 4.38148 , 4.38148 , 4.38148 , 4.38148 , 4.38148 , 4.38148 , 4.30842 , 4.30842 , 4.30842 , 4.30842 , 4.30842 , 4.30842 , 4.30842 , 4.30842 , 3.13301 , 3.14139 , 3.1579 , 3.18239 , 3.20032 , 3.24252 , 3.29443 , 3.33786 , 3.30589 , 3.30589 , 3.30589 , 3.30589 , 3.30589 , 3.30589 , 3.31232 , 3.46858 , 3.6501 , 3.80687 , 3.81251 , 3.81251 , 3.81251 , 3.81251 , 3.81251 , 3.67549 , 3.45789 , 3.3205 , 3.3205 , 3.3205 , 3.3205 , 3.3205 , 3.3205 , 3.3205 , 3.28122 , 3.28122 , 3.28122 , 3.28122 , 3.28122 , 3.28122 , 3.28122 , 3.36396 , 3.63983 , 3.72244 , 3.72244 , 3.72244 , 3.72244 , 3.72244 , 3.72244 , 3.85911 , 4.24517 , 4.38148 , 4.38148 , 4.38148 , 4.38148 , 4.38148 , 4.38148 , 4.38148 , 4.30842 , 4.30842 , 4.30842 , 4.30842 , 4.30842 , 4.30842 , 4.30842 , 4.30842 , 3.28255 , 3.28696 , 3.29715 , 3.3137 , 3.33831 , 3.35011 , 3.35011 , 3.35011 , 3.30589 , 3.30589 , 3.30589 , 3.30589 , 3.30589 , 3.30589 , 3.31211 , 3.46841 , 3.64895 , 3.80631 , 3.81251 , 3.81251 , 3.81251 , 3.81251 , 3.81218 , 3.67551 , 3.46103 , 3.3205 , 3.3205 , 3.3205 , 3.3205 , 3.3205 , 3.3205 , 3.3205 , 3.28122 , 3.28122 , 3.28122 , 3.28122 , 3.28122 , 3.28122 , 3.28122 , 3.36385 , 3.63986 , 3.72244 , 3.72244 , 3.72244 , 3.72244 , 3.72244 , 3.72244 , 3.85903 , 4.24503 , 4.38148 , 4.38148 , 4.38148 , 4.38148 , 4.38148 , 4.38148 , 4.38148 , 4.30842 , 4.30842 , 4.30842 , 4.30842 , 4.30842 , 4.30842 , 4.30842 , 4.30842 , 3.35011 , 3.35011 , 3.35011 , 3.35011 , 3.35011 , 3.35011 , 3.35011 , 3.35011 , 3.30589 , 3.30589 , 3.30589 , 3.30589 , 3.30589 , 3.30589 , 3.30913 , 3.46422 , 3.64279 , 3.78711 , 3.79936 , 3.80111 , 3.80238 , 3.79977 , 3.78319 , 3.65278 , 3.45026 , 3.3205 , 3.3205 , 3.3205 , 3.3205 , 3.3205 , 3.3205 , 3.3205 , 3.28122 , 3.28122 , 3.28122 , 3.28122 , 3.28122 , 3.28122 , 3.28122 , 3.36397 , 3.64063 , 3.72244 , 3.72244 , 3.72244 , 3.72244 , 3.72244 , 3.72244 , 3.85892 , 4.24553 , 4.3801 , 4.38148 , 4.38148 , 4.38148 , 4.38148 , 4.38148 , 4.38148 , 4.30842 , 4.30842 , 4.30842 , 4.30842 , 4.30842 , 4.30842 , 4.30842 , 4.30842 , 3.35011 , 3.35011 , 3.35011 , 3.35011 , 3.35011 , 3.35011 , 3.35011 , 3.35011 , 3.30686 , 3.30728 , 3.30728 , 3.30727 , 3.30711 , 3.3065 , 3.30712 , 3.44265 , 3.55463 , 3.60442 , 3.60951 , 3.61303 , 3.61781 , 3.61616 , 3.58065 , 3.47725 , 3.33092 , 3.23579 , 3.22605 , 3.2269 , 3.22891 , 3.23167 , 3.23886 , 3.25197 , 3.25457 , 3.2723 , 3.28122 , 3.28122 , 3.28122 , 3.28122 , 3.28122 , 3.37974 , 3.6434 , 3.72244 , 3.72244 , 3.72244 , 3.72244 , 3.72244 , 3.72244 , 3.85314 , 4.18505 , 4.27885 , 4.27517 , 4.27555 , 4.27696 , 4.27869 , 4.28197 , 4.28592 , 4.24701 , 4.25347 , 4.26691 , 4.26736 , 4.26782 , 4.26644 , 4.26989 , 4.28294 , 3.40111 , 3.41075 , 3.40523 , 3.40363 , 3.4027 , 3.40222 , 3.41821 , 3.44715 , 3.45666 , 3.46309 , 3.46333 , 3.46331 , 3.46274 , 3.45909 , 3.43398 , 3.35576 , 3.30993 , 3.26143 , 3.24563 , 3.23971 , 3.2432 , 3.246 , 3.20963 , 3.11448 , 2.9914 , 2.91009 , 2.88813 , 2.88696 , 2.88852 , 2.89203 , 2.90317 , 2.95748 , 3.03119 , 3.14435 , 3.1652 , 3.16546 , 3.16664 , 3.16962 , 3.19949 , 3.37222 , 3.64351 , 3.82337 , 3.83453 , 3.82985 , 3.82872 , 3.82827 , 3.82077 , 3.75496 , 3.81613 , 3.73372 , 3.71757 , 3.71586 , 3.71739 , 3.72001 , 3.72416 , 3.75079 , 3.76953 , 3.85627 , 3.85987 , 3.85795 , 3.8601 , 3.86343 , 3.83988 , 3.94107 , 3.54011 , 3.5506 , 3.55472 , 3.55486 , 3.55538 , 3.55528 , 3.55767 , 3.57433 , 3.60336 , 3.6129 , 3.61885 , 3.61897 , 3.61691 , 3.61391 , 3.51651 , 3.29169 , 3.06829 , 2.91212 , 2.82641 , 2.80443 , 2.80005 , 2.80056 , 2.77964 , 2.68778 , 2.57032 , 2.48159 , 2.45235 , 2.44593 , 2.44394 , 2.44369 , 2.46125 , 2.5458 , 2.76986 , 2.89034 , 2.88887 , 2.88364 , 2.88228 , 2.88242 , 2.93267 , 3.21675 , 3.7742 , 4.0814 , 4.15189 , 4.15289 , 4.15388 , 4.15519 , 4.09792 , 3.74958 , 3.19851 , 2.99064 , 2.9291 , 2.92167 , 2.91953 , 2.91787 , 2.92238 , 2.95163 , 3.1023 , 3.15555 , 3.14552 , 3.14228 , 3.14075 , 3.14347 , 3.16195 , 3.05469 , 3.60634 , 3.60634 , 3.60634 , 3.60634 , 3.60634 , 3.60634 , 3.60634 , 3.6127 , 3.73043 , 3.75961 , 3.76915 , 3.77314 , 3.77128 , 3.72976 , 3.53607 , 3.23477 , 2.91211 , 2.63508 , 2.47068 , 2.4343 , 2.42258 , 2.41907 , 2.40981 , 2.35483 , 2.20983 , 2.13806 , 2.11241 , 2.10569 , 2.10278 , 2.10202 , 2.11706 , 2.29036 , 2.60387 , 2.76184 , 2.76767 , 2.76767 , 2.76767 , 2.76808 , 2.83529 , 3.2259 , 3.79324 , 4.19057 , 4.25917 , 4.26006 , 4.26006 , 4.25986 , 4.15804 , 3.65206 , 2.96195 , 2.46296 , 2.36814 , 2.3615 , 2.3594 , 2.35805 , 2.35875 , 2.42475 , 2.69937 , 2.74852 , 2.73535 , 2.73255 , 2.73218 , 2.73316 , 2.72757 , 2.7143 , 3.60634 , 3.60634 , 3.60634 , 3.60634 , 3.60634 , 3.60634 , 3.60634 , 3.6131 , 3.7688 , 3.77593 , 3.77593 , 3.77593 , 3.77593 , 3.73775 , 3.53445 , 3.2133 , 2.83917 , 2.49457 , 2.2784 , 2.23947 , 2.23557 , 2.23391 , 2.23068 , 2.20208 , 2.055 , 2.01408 , 2.01139 , 2.01139 , 2.01139 , 2.01139 , 2.02978 , 2.2252 , 2.56358 , 2.75906 , 2.76767 , 2.76767 , 2.76767 , 2.76767 , 2.83703 , 3.22503 , 3.79973 , 4.19513 , 4.26006 , 4.26006 , 4.26006 , 4.26006 , 4.15146 , 3.63165 , 2.90028 , 2.36413 , 2.25622 , 2.25521 , 2.25521 , 2.25521 , 2.2555 , 2.3208 , 2.63067 , 2.69137 , 2.69137 , 2.69137 , 2.69137 , 2.69137 , 2.69137 , 2.69137 , 3.60634 , 3.60634 , 3.60634 , 3.60634 , 3.60634 , 3.60634 , 3.60634 , 3.61322 , 3.76913 , 3.77593 , 3.77593 , 3.77593 , 3.77593 , 3.73743 , 3.53312 , 3.20701 , 2.82618 , 2.4722 , 2.25513 , 2.22514 , 2.22514 , 2.22514 , 2.22514 , 2.19692 , 2.04428 , 2.01139 , 2.01139 , 2.01139 , 2.01139 , 2.01139 , 2.02592 , 2.21753 , 2.56081 , 2.75503 , 2.76767 , 2.76767 , 2.76767 , 2.76767 , 2.83675 , 3.22406 , 3.79923 , 4.1961 , 4.26006 , 4.26006 , 4.26006 , 4.26006 , 4.15064 , 3.62847 , 2.8943 , 2.35911 , 2.25521 , 2.25521 , 2.25521 , 2.25521 , 2.25521 , 2.31796 , 2.62871 , 2.69137 , 2.69137 , 2.69137 , 2.69137 , 2.69137 , 2.69137 , 2.69137 , 3.60634 , 3.60634 , 3.60634 , 3.60634 , 3.60634 , 3.60634 , 3.60634 , 3.61344 , 3.76516 , 3.77593 , 3.77593 , 3.77593 , 3.77593 , 3.74108 , 3.53989 , 3.22101 , 2.84556 , 2.49787 , 2.26763 , 2.22633 , 2.22514 , 2.22514 , 2.22514 , 2.19759 , 2.04644 , 2.01139 , 2.01139 , 2.01139 , 2.01139 , 2.01139 , 2.02687 , 2.219 , 2.56168 , 2.75556 , 2.76767 , 2.76767 , 2.76767 , 2.76767 , 2.83662 , 3.22415 , 3.79948 , 4.19629 , 4.26006 , 4.26006 , 4.26006 , 4.26006 , 4.15079 , 3.63132 , 2.89519 , 2.3597 , 2.25521 , 2.25521 , 2.25521 , 2.25521 , 2.25521 , 2.31789 , 2.6287 , 2.69137 , 2.69137 , 2.69137 , 2.69137 , 2.69137 , 2.69137 , 2.69137 , 3.5363 , 3.54168 , 3.55407 , 3.55975 , 3.56443 , 3.57118 , 3.58167 , 3.6089 , 3.76105 , 3.77593 , 3.77593 , 3.77593 , 3.77593 , 3.75341 , 3.58485 , 3.30687 , 2.96292 , 2.62874 , 2.40829 , 2.343 , 2.32691 , 2.31973 , 2.31109 , 2.2623 , 2.11419 , 2.05325 , 2.03655 , 2.03104 , 2.02931 , 2.03036 , 2.05704 , 2.25118 , 2.58583 , 2.75964 , 2.76767 , 2.76767 , 2.76767 , 2.76779 , 2.83795 , 3.22699 , 3.80237 , 4.19654 , 4.26006 , 4.26006 , 4.26006 , 4.25835 , 4.1368 , 3.62906 , 2.89693 , 2.35816 , 2.25521 , 2.25521 , 2.25521 , 2.25521 , 2.25521 , 2.31809 , 2.629 , 2.69137 , 2.69137 , 2.69137 , 2.69137 , 2.69137 , 2.69137 , 2.69137 , 3.38666 , 3.3983 , 3.40351 , 3.40872 , 3.415 , 3.42568 , 3.45194 , 3.60479 , 3.76106 , 3.85728 , 3.89302 , 3.9104 , 3.91423 , 3.87222 , 3.72178 , 3.46588 , 3.18524 , 2.94224 , 2.78593 , 2.72147 , 2.70468 , 2.69625 , 2.66936 , 2.58019 , 2.44556 , 2.34478 , 2.29664 , 2.28077 , 2.27477 , 2.27645 , 2.31584 , 2.47369 , 2.75622 , 2.91583 , 2.91326 , 2.89958 , 2.89481 , 2.89078 , 2.92819 , 3.24398 , 3.79709 , 4.11368 , 4.16892 , 4.17096 , 4.17318 , 4.16383 , 4.03484 , 3.5396 , 2.86949 , 2.34198 , 2.25521 , 2.25521 , 2.25521 , 2.25521 , 2.25521 , 2.32503 , 2.62816 , 2.68815 , 2.68834 , 2.68842 , 2.68854 , 2.6884 , 2.68935 , 2.69027 , 3.2432 , 3.2476 , 3.25274 , 3.25885 , 3.26952 , 3.28274 , 3.40528 , 3.57936 , 3.76957 , 3.96991 , 4.07565 , 4.11691 , 4.1258 , 4.0882 , 3.95646 , 3.76833 , 3.57013 , 3.41393 , 3.31157 , 3.27939 , 3.27099 , 3.26389 , 3.22011 , 3.11013 , 2.97985 , 2.86849 , 2.81749 , 2.80294 , 2.80027 , 2.80466 , 2.8434 , 2.98024 , 3.17264 , 3.33678 , 3.37193 , 3.36169 , 3.35721 , 3.35245 , 3.35546 , 3.40572 , 3.64082 , 3.69975 , 3.70465 , 3.70616 , 3.71122 , 3.71159 , 3.62627 , 3.37927 , 2.72915 , 2.33948 , 2.27999 , 2.27933 , 2.27911 , 2.27892 , 2.28054 , 2.30457 , 2.5068 , 2.50912 , 2.50966 , 2.51037 , 2.51131 , 2.51242 , 2.50533 , 2.55355 , 3.09164 , 3.0971 , 3.10327 , 3.11329 , 3.12638 , 3.18909 , 3.34574 , 3.55872 , 3.80726 , 4.07271 , 4.26381 , 4.35276 , 4.38124 , 4.34114 , 4.24482 , 4.1159 , 4.0097 , 3.93967 , 3.90833 , 3.89811 , 3.90158 , 3.89428 , 3.83431 , 3.71967 , 3.57771 , 3.46635 , 3.4219 , 3.41555 , 3.41753 , 3.4251 , 3.45596 , 3.57438 , 3.73045 , 3.88655 , 3.96101 , 3.9581 , 3.95782 , 3.96044 , 3.93069 , 3.75803 , 3.27588 , 3.08425 , 3.05489 , 3.04842 , 3.04746 , 3.04651 , 3.01499 , 2.87157 , 2.6816 , 2.49308 , 2.47607 , 2.4747 , 2.4749 , 2.47522 , 2.47601 , 2.40052 , 2.05456 , 2.02383 , 2.02192 , 2.02105 , 2.02026 , 2.02106 , 2.02657 , 1.97557 , 2.94128 , 2.94729 , 2.95713 , 2.97017 , 2.99225 , 3.10633 , 3.2939 , 3.52968 , 3.83165 , 4.14285 , 4.40741 , 4.5585 , 4.58811 , 4.55562 , 4.50402 , 4.46041 , 4.4507 , 4.45267 , 4.45406 , 4.45928 , 4.46726 , 4.45746 , 4.39502 , 4.25485 , 4.10324 , 3.96736 , 3.9398 , 3.93904 , 3.94262 , 3.94902 , 3.97082 , 4.05912 , 4.21513 , 4.34092 , 4.40262 , 4.41814 , 4.42031 , 4.41964 , 4.29619 , 3.83954 , 3.1955 , 2.70136 , 2.58748 , 2.58297 , 2.58123 , 2.57836 , 2.56292 , 2.53481 , 2.51556 , 2.50292 , 2.4988 , 2.4988 , 2.4988 , 2.4988 , 2.4988 , 2.37463 , 1.97012 , 1.8443 , 1.84314 , 1.84301 , 1.84294 , 1.84307 , 1.84214 , 1.84119 , 2.79182 , 2.80089 , 2.81418 , 2.83594 , 2.90228 , 3.0599 , 3.26237 , 3.51796 , 3.8425 , 4.1894 , 4.48618 , 4.67742 , 4.71735 , 4.70912 , 4.69465 , 4.70881 , 4.78672 , 4.81643 , 4.82674 , 4.83325 , 4.83854 , 4.82665 , 4.76346 , 4.60726 , 4.37556 , 4.21268 , 4.18658 , 4.18621 , 4.18701 , 4.1888 , 4.19472 , 4.25952 , 4.45033 , 4.53445 , 4.54509 , 4.54699 , 4.54699 , 4.5434 , 4.3841 , 3.86511 , 3.18355 , 2.64345 , 2.4949 , 2.49354 , 2.49354 , 2.49354 , 2.49354 , 2.49354 , 2.4988 , 2.4988 , 2.4988 , 2.4988 , 2.4988 , 2.4988 , 2.4988 , 2.37116 , 1.96797 , 1.84007 , 1.84007 , 1.84007 , 1.84007 , 1.84007 , 1.84007 , 1.84007 , 2.73489 , 2.73489 , 2.73489 , 2.74445 , 2.87393 , 3.03024 , 3.23278 , 3.50678 , 3.84009 , 4.19695 , 4.5082 , 4.69554 , 4.71866 , 4.71866 , 4.71866 , 4.74952 , 4.89648 , 4.93697 , 4.93697 , 4.93697 , 4.93697 , 4.9362 , 4.8993 , 4.70854 , 4.4318 , 4.22958 , 4.20446 , 4.20446 , 4.20446 , 4.20446 , 4.20446 , 4.27319 , 4.4827 , 4.54699 , 4.54699 , 4.54699 , 4.54699 , 4.54671 , 4.38874 , 3.86708 , 3.18389 , 2.64271 , 2.49354 , 2.49354 , 2.49354 , 2.49354 , 2.49354 , 2.49354 , 2.4988 , 2.4988 , 2.4988 , 2.4988 , 2.4988 , 2.4988 , 2.4988 , 2.37117 , 1.96772 , 1.84007 , 1.84007 , 1.84007 , 1.84007 , 1.84007 , 1.84007 , 1.84007 , 2.73489 , 2.73489 , 2.73489 , 2.73489 , 2.84692 , 3.0028 , 3.20271 , 3.4827 , 3.82205 , 4.17884 , 4.49537 , 4.69219 , 4.71866 , 4.71866 , 4.71866 , 4.74977 , 4.90571 , 4.93697 , 4.93697 , 4.93697 , 4.93697 , 4.93697 , 4.91035 , 4.72067 , 4.42688 , 4.2286 , 4.20446 , 4.20446 , 4.20446 , 4.20446 , 4.20446 , 4.26886 , 4.48277 , 4.54699 , 4.54699 , 4.54699 , 4.54699 , 4.54689 , 4.38949 , 3.86763 , 3.18467 , 2.64338 , 2.49366 , 2.49354 , 2.49354 , 2.49354 , 2.49354 , 2.49354 , 2.4988 , 2.4988 , 2.4988 , 2.4988 , 2.4988 , 2.4988 , 2.4988 , 2.37133 , 1.96778 , 1.84007 , 1.84007 , 1.84007 , 1.84007 , 1.84007 , 1.84007 , 1.84007 , 2.73489 , 2.73489 , 2.73489 , 2.73489 , 2.78368 , 2.93964 , 3.15902 , 3.44094 , 3.77888 , 4.14227 , 4.46791 , 4.68067 , 4.71866 , 4.71866 , 4.71866 , 4.74979 , 4.90589 , 4.93697 , 4.93697 , 4.93697 , 4.93697 , 4.93697 , 4.91115 , 4.71888 , 4.42578 , 4.22817 , 4.20446 , 4.20446 , 4.20446 , 4.20446 , 4.20446 , 4.26885 , 4.4828 , 4.54699 , 4.54699 , 4.54699 , 4.54699 , 4.54695 , 4.39306 , 3.87637 , 3.1975 , 2.65524 , 2.49747 , 2.49354 , 2.49354 , 2.49354 , 2.49354 , 2.49354 , 2.4988 , 2.4988 , 2.4988 , 2.4988 , 2.4988 , 2.4988 , 2.4988 , 2.37526 , 1.97325 , 1.84165 , 1.84007 , 1.84007 , 1.84007 , 1.84007 , 1.84007 , 1.84007 , 2.58107 , 2.59074 , 2.59942 , 2.61466 , 2.69827 , 2.85458 , 3.0903 , 3.36813 , 3.71323 , 4.08502 , 4.42796 , 4.66079 , 4.71866 , 4.71866 , 4.71866 , 4.74966 , 4.90204 , 4.93697 , 4.93697 , 4.93697 , 4.93697 , 4.93697 , 4.91212 , 4.71925 , 4.42908 , 4.22852 , 4.20446 , 4.20446 , 4.20446 , 4.20446 , 4.20446 , 4.27235 , 4.4845 , 4.54699 , 4.54699 , 4.54699 , 4.54699 , 4.54699 , 4.41132 , 3.93557 , 3.30277 , 2.78431 , 2.62688 , 2.61187 , 2.60808 , 2.60491 , 2.60117 , 2.59698 , 2.59723 , 2.59416 , 2.59191 , 2.59019 , 2.58928 , 2.59233 , 2.59057 , 2.46845 , 2.05671 , 1.88577 , 1.86229 , 1.85964 , 1.85932 , 1.85969 , 1.85654 , 1.85024 , 2.4357 , 2.44377 , 2.45866 , 2.4891 , 2.59087 , 2.74742 , 2.9902 , 3.27973 , 3.63187 , 4.01624 , 4.37322 , 4.63099 , 4.71781 , 4.71866 , 4.71866 , 4.74584 , 4.87697 , 4.93697 , 4.93697 , 4.93697 , 4.93697 , 4.93697 , 4.91135 , 4.72627 , 4.43442 , 4.25744 , 4.2329 , 4.23018 , 4.22984 , 4.23175 , 4.23564 , 4.31022 , 4.52245 , 4.57583 , 4.57885 , 4.57721 , 4.57798 , 4.57704 , 4.49241 , 4.1064 , 3.57997 , 3.25916 , 3.14732 , 3.13106 , 3.12763 , 3.12469 , 3.12098 , 3.12092 , 3.1231 , 3.12346 , 3.12055 , 3.11862 , 3.11872 , 3.12407 , 3.09092 , 2.86449 , 2.48019 , 2.22821 , 2.1671 , 2.16093 , 2.15962 , 2.16145 , 2.17371 , 2.09118 , 2.2881 , 2.30239 , 2.33251 , 2.3576 , 2.47194 , 2.63962 , 2.89094 , 3.18624 , 3.55256 , 3.95198 , 4.31896 , 4.55639 , 4.6 , 4.6 , 4.6 , 4.68084 , 4.83137 , 4.88326 , 4.88326 , 4.88326 , 4.88326 , 4.88326 , 4.88151 , 4.72011 , 4.53215 , 4.3904 , 4.3864 , 4.38583 , 4.38581 , 4.38609 , 4.38853 , 4.44899 , 4.64168 , 4.73789 , 4.74384 , 4.74428 , 4.74481 , 4.73956 , 4.65016 , 4.34834 , 4.07663 , 3.89956 , 3.84036 , 3.83499 , 3.83675 , 3.83854 , 3.84198 , 3.85393 , 3.87867 , 3.88582 , 3.88645 , 3.8881 , 3.8928 , 3.90006 , 3.80116 , 3.51215 , 3.09497 , 2.84408 , 2.78579 , 2.78364 , 2.78512 , 2.78736 , 2.77183 , 2.8498 , 2.14734 , 2.17673 , 2.19846 , 2.23236 , 2.35827 , 2.548 , 2.79576 , 3.10828 , 3.49267 , 3.90746 , 4.287 , 4.54348 , 4.6 , 4.6 , 4.6 , 4.66897 , 4.82076 , 4.88326 , 4.88326 , 4.88326 , 4.88326 , 4.88326 , 4.88151 , 4.7565 , 4.54516 , 4.41101 , 4.41101 , 4.41101 , 4.41101 , 4.41101 , 4.41101 , 4.48794 , 4.69922 , 4.77445 , 4.77445 , 4.77445 , 4.77445 , 4.77445 , 4.75089 , 4.63328 , 4.44955 , 4.36698 , 4.35484 , 4.35431 , 4.35642 , 4.35914 , 4.36279 , 4.3696 , 4.40222 , 4.41232 , 4.41494 , 4.41636 , 4.41821 , 4.40807 , 4.30183 , 3.97954 , 3.43079 , 3.11854 , 3.08557 , 3.08482 , 3.08506 , 3.08449 , 3.08666 , 3.0929 , 2.0203 , 2.04192 , 2.07604 , 2.14124 , 2.28706 , 2.48221 , 2.72806 , 3.06003 , 3.45936 , 3.88733 , 4.27761 , 4.53983 , 4.6 , 4.6 , 4.6 , 4.66452 , 4.81989 , 4.88326 , 4.88326 , 4.88326 , 4.88326 , 4.88326 , 4.88326 , 4.7566 , 4.53843 , 4.41101 , 4.41101 , 4.41101 , 4.41101 , 4.41101 , 4.41101 , 4.48269 , 4.70419 , 4.77445 , 4.77445 , 4.77445 , 4.77445 , 4.77445 , 4.77445 , 4.72502 , 4.52124 , 4.47083 , 4.47083 , 4.47083 , 4.47083 , 4.47083 , 4.47083 , 4.47083 , 4.50762 , 4.50762 , 4.50762 , 4.50762 , 4.50762 , 4.50666 , 4.46314 , 4.13187 , 3.49537 , 3.1414 , 3.10419 , 3.10419 , 3.10419 , 3.10419 , 3.10419 , 3.10419 , 2.00172 , 2.00172 , 2.00172 , 2.09923 , 2.2558 , 2.44317 , 2.69993 , 3.0414 , 3.44876 , 3.88225 , 4.27575 , 4.53934 , 4.6 , 4.6 , 4.6 , 4.66364 , 4.81976 , 4.88326 , 4.88326 , 4.88326 , 4.88326 , 4.88326 , 4.88326 , 4.75617 , 4.5382 , 4.41101 , 4.41101 , 4.41101 , 4.41101 , 4.41101 , 4.41101 , 4.48161 , 4.70392 , 4.77445 , 4.77445 , 4.77445 , 4.77445 , 4.77445 , 4.77445 , 4.72955 , 4.51704 , 4.47083 , 4.47083 , 4.47083 , 4.47083 , 4.47083 , 4.47083 , 4.47083 , 4.50762 , 4.50762 , 4.50762 , 4.50762 , 4.50762 , 4.50762 , 4.47653 , 4.13073 , 3.48766 , 3.13484 , 3.10419 , 3.10419 , 3.10419 , 3.10419 , 3.10419 , 3.10419 , 2.00172 , 2.00172 , 2.00172 , 2.09916 , 2.25575 , 2.43513 , 2.69973 , 3.04284 , 3.45133 , 3.88495 , 4.2777 , 4.54008 , 4.6 , 4.6 , 4.6 , 4.66361 , 4.8173 , 4.88326 , 4.88326 , 4.88326 , 4.88326 , 4.88326 , 4.88326 , 4.75624 , 4.53861 , 4.41101 , 4.41101 , 4.41101 , 4.41101 , 4.41101 , 4.41101 , 4.48212 , 4.70408 , 4.77445 , 4.77445 , 4.77445 , 4.77445 , 4.77445 , 4.77445 , 4.72946 , 4.51705 , 4.47083 , 4.47083 , 4.47083 , 4.47083 , 4.47083 , 4.47083 , 4.47083 , 4.50762 , 4.50762 , 4.50762 , 4.50762 , 4.50762 , 4.50762 , 4.47648 , 4.12888 , 3.48593 , 3.13429 , 3.10419 , 3.10419 , 3.10419 , 3.10419 , 3.10419 , 3.10419 , 2.00172 , 2.00833 , 2.04706 , 2.12244 , 2.27853 , 2.47657 , 2.72532 , 3.06464 , 3.46929 , 3.89856 , 4.28581 , 4.54353 , 4.6 , 4.6 , 4.6 , 4.66112 , 4.80786 , 4.8571 , 4.85933 , 4.86085 , 4.86291 , 4.86606 , 4.86558 , 4.75449 , 4.53518 , 4.41101 , 4.41101 , 4.41101 , 4.41101 , 4.41101 , 4.41101 , 4.48064 , 4.70136 , 4.764 , 4.76491 , 4.76492 , 4.7654 , 4.76638 , 4.76676 , 4.72258 , 4.51605 , 4.47083 , 4.47083 , 4.47083 , 4.47083 , 4.47083 , 4.47083 , 4.47083 , 4.50762 , 4.50762 , 4.50762 , 4.50762 , 4.50762 , 4.50762 , 4.47353 , 4.13149 , 3.48778 , 3.13415 , 3.10419 , 3.10419 , 3.10419 , 3.10419 , 3.10419 , 3.10419 , 2.097 , 2.13343 , 2.1644 , 2.20347 , 2.33643 , 2.53623 , 2.78803 , 3.118 , 3.51474 , 3.93623 , 4.31483 , 4.5567 , 4.6 , 4.6 , 4.6 , 4.62309 , 4.64623 , 4.63835 , 4.63628 , 4.63862 , 4.64364 , 4.65224 , 4.66966 , 4.6478 , 4.51823 , 4.41101 , 4.41101 , 4.41101 , 4.41101 , 4.41101 , 4.41101 , 4.44561 , 4.54086 , 4.54441 , 4.53466 , 4.53462 , 4.53794 , 4.54339 , 4.55462 , 4.54673 , 4.44248 , 4.42194 , 4.44494 , 4.44662 , 4.44721 , 4.44799 , 4.43661 , 4.43206 , 4.45226 , 4.45198 , 4.45148 , 4.45221 , 4.45317 , 4.45111 , 4.40725 , 4.0899 , 3.47736 , 3.12989 , 3.10419 , 3.10419 , 3.10419 , 3.10419 , 3.10419 , 3.10419 , 2.24103 , 2.25361 , 2.28976 , 2.32261 , 2.44485 , 2.62781 , 2.88388 , 3.20242 , 3.59195 , 4.0082 , 4.38341 , 4.64022 , 4.69704 , 4.69226 , 4.64939 , 4.49325 , 4.36658 , 4.27499 , 4.23563 , 4.22414 , 4.22602 , 4.23768 , 4.26484 , 4.35761 , 4.40654 , 4.4958 , 4.50906 , 4.50954 , 4.5091 , 4.50459 , 4.46179 , 4.28571 , 4.12528 , 3.99241 , 3.94903 , 3.93841 , 3.93917 , 3.94406 , 3.95603 , 4.00315 , 4.01698 , 4.15147 , 4.17115 , 4.16854 , 4.17026 , 4.17542 , 4.17023 , 4.07217 , 4.05019 , 4.02205 , 4.01989 , 4.02104 , 4.02376 , 4.02447 , 3.99261 , 3.88743 , 3.39443 , 3.18718 , 3.16302 , 3.16229 , 3.16192 , 3.16196 , 3.16298 , 3.14493 , 2.39048 , 2.39589 , 2.40896 , 2.44628 , 2.55865 , 2.72782 , 2.98568 , 3.30393 , 3.68945 , 4.1035 , 4.48119 , 4.75417 , 4.84199 , 4.82904 , 4.65483 , 4.39442 , 4.10884 , 3.90447 , 3.78172 , 3.74825 , 3.74165 , 3.75116 , 3.83092 , 3.99643 , 4.3325 , 4.63059 , 4.72903 , 4.73102 , 4.73208 , 4.72468 , 4.54962 , 4.1406 , 3.6673 , 3.37913 , 3.24396 , 3.2189 , 3.2133 , 3.2114 , 3.23041 , 3.31314 , 3.5413 , 3.67115 , 3.67245 , 3.66516 , 3.66287 , 3.66317 , 3.66755 , 3.59327 , 3.3988 , 3.34428 , 3.33271 , 3.33051 , 3.32953 , 3.33001 , 3.31519 , 3.24941 , 3.48659 , 3.4799 , 3.47054 , 3.4704 , 3.47077 , 3.47116 , 3.46978 , 3.48736 , 2.53936 , 2.54581 , 2.55206 , 2.56585 , 2.66831 , 2.82925 , 3.07489 , 3.39927 , 3.78592 , 4.19853 , 4.57532 , 4.84351 , 4.94663 , 4.8825 , 4.64517 , 4.30226 , 3.94709 , 3.60473 , 3.39831 , 3.33521 , 3.32155 , 3.33207 , 3.45914 , 3.79712 , 4.24425 , 4.65572 , 4.82334 , 4.82912 , 4.82912 , 4.80578 , 4.54979 , 4.01068 , 3.41864 , 2.88594 , 2.66087 , 2.6224 , 2.6144 , 2.61051 , 2.62544 , 2.82248 , 3.20568 , 3.38509 , 3.39442 , 3.38639 , 3.38541 , 3.38703 , 3.39347 , 3.31875 , 3.00931 , 2.90671 , 2.90061 , 2.89898 , 2.89832 , 2.89675 , 2.89006 , 3.00304 , 3.40942 , 3.52849 , 3.52849 , 3.52849 , 3.52849 , 3.52849 , 3.52849 , 3.52849 , 2.63896 , 2.63896 , 2.63896 , 2.63896 , 2.74864 , 2.91826 , 3.14885 , 3.47239 , 3.86192 , 4.27273 , 4.64155 , 4.88521 , 4.95092 , 4.8815 , 4.63498 , 4.26633 , 3.83954 , 3.44846 , 3.1771 , 3.1066 , 3.1 , 3.11275 , 3.29408 , 3.70902 , 4.21651 , 4.64612 , 4.8251 , 4.82912 , 4.82912 , 4.80637 , 4.5348 , 3.9713 , 3.29238 , 2.70146 , 2.41793 , 2.38908 , 2.38711 , 2.38672 , 2.41279 , 2.659 , 3.10658 , 3.34937 , 3.36181 , 3.36181 , 3.36181 , 3.36181 , 3.36181 , 3.26882 , 2.9411 , 2.84393 , 2.84366 , 2.84366 , 2.84366 , 2.84366 , 2.84376 , 2.97653 , 3.39705 , 3.52849 , 3.52849 , 3.52849 , 3.52849 , 3.52849 , 3.52849 , 3.52849 , 2.63896 , 2.63896 , 2.63896 , 2.63896 , 2.77447 , 2.9447 , 3.1959 , 3.51891 , 3.9084 , 4.31805 , 4.6796 , 4.90464 , 4.95092 , 4.88035 , 4.63121 , 4.25246 , 3.81514 , 3.40297 , 3.13261 , 3.07837 , 3.07837 , 3.08697 , 3.27418 , 3.69332 , 4.2084 , 4.64412 , 4.82448 , 4.82912 , 4.82912 , 4.80568 , 4.53146 , 3.95856 , 3.27225 , 2.66837 , 2.3966 , 2.37818 , 2.37818 , 2.37818 , 2.39863 , 2.64199 , 3.098 , 3.34355 , 3.36181 , 3.36181 , 3.36181 , 3.36181 , 3.36181 , 3.2672 , 2.93838 , 2.84366 , 2.84366 , 2.84366 , 2.84366 , 2.84366 , 2.84366 , 2.9757 , 3.39648 , 3.52849 , 3.52849 , 3.52849 , 3.52849 , 3.52849 , 3.52849 , 3.52849 , 2.63896 , 2.63896 , 2.63896 , 2.63896 , 2.78584 , 2.94381 , 3.19983 , 3.52778 , 3.91453 , 4.31832 , 4.66502 , 4.89187 , 4.95092 , 4.87374 , 4.62952 , 4.24865 , 3.80903 , 3.39607 , 3.1285 , 3.07837 , 3.07837 , 3.08664 , 3.27211 , 3.69266 , 4.20844 , 4.64433 , 4.8245 , 4.82912 , 4.82912 , 4.80565 , 4.53124 , 3.95753 , 3.26922 , 2.66507 , 2.39529 , 2.37818 , 2.37818 , 2.37818 , 2.39803 , 2.64118 , 3.09752 , 3.34344 , 3.36181 , 3.36181 , 3.36181 , 3.36181 , 3.36181 , 3.26719 , 2.93828 , 2.84366 , 2.84366 , 2.84366 , 2.84366 , 2.84366 , 2.84366 , 2.97565 , 3.39653 , 3.52849 , 3.52849 , 3.52849 , 3.52849 , 3.52849 , 3.52849 , 3.52849 , 2.63896 , 2.63896 , 2.63896 , 2.63896 , 2.7656 , 2.94209 , 3.17816 , 3.4931 , 3.86434 , 4.25332 , 4.58215 , 4.82114 , 4.89361 , 4.83083 , 4.59879 , 4.23844 , 3.804 , 3.4072 , 3.13647 , 3.08167 , 3.07926 , 3.09476 , 3.28498 , 3.70267 , 4.2153 , 4.64645 , 4.82515 , 4.82912 , 4.82912 , 4.80584 , 4.53241 , 3.95938 , 3.27 , 2.66664 , 2.39577 , 2.37818 , 2.37818 , 2.37818 , 2.39794 , 2.64088 , 3.09796 , 3.3433 , 3.36181 , 3.36181 , 3.36181 , 3.36181 , 3.36181 , 3.26732 , 2.93827 , 2.84366 , 2.84366 , 2.84366 , 2.84366 , 2.84366 , 2.84366 , 2.97565 , 3.39694 , 3.52849 , 3.52849 , 3.52849 , 3.52849 , 3.52849 , 3.52849 , 3.52849 , 2.63896 , 2.63896 , 2.63896 , 2.63896 , 2.7565 , 2.91249 , 3.13524 , 3.42661 , 3.77142 , 4.10412 , 4.42616 , 4.62108 , 4.68301 , 4.67233 , 4.51603 , 4.19706 , 3.82309 , 3.46596 , 3.2764 , 3.24111 , 3.23375 , 3.24115 , 3.39475 , 3.76971 , 4.23861 , 4.65566 , 4.82584 , 4.82912 , 4.82912 , 4.80356 , 4.53499 , 3.96273 , 3.28443 , 2.68169 , 2.40898 , 2.38313 , 2.38178 , 2.38142 , 2.39904 , 2.64236 , 3.09423 , 3.34044 , 3.36181 , 3.36181 , 3.36181 , 3.36181 , 3.36181 , 3.26787 , 2.93912 , 2.84366 , 2.84366 , 2.84366 , 2.84366 , 2.84366 , 2.84366 , 2.9805 , 3.39699 , 3.51675 , 3.51872 , 3.51895 , 3.51915 , 3.51887 , 3.52068 , 3.52372 , 2.63896 , 2.63896 , 2.63896 , 2.63896 , 2.7151 , 2.87132 , 3.06857 , 3.33222 , 3.62598 , 3.9478 , 4.20682 , 4.34808 , 4.40243 , 4.37783 , 4.32772 , 4.16157 , 3.85512 , 3.67214 , 3.6008 , 3.57673 , 3.57366 , 3.58597 , 3.67751 , 3.92382 , 4.32572 , 4.65908 , 4.78148 , 4.78438 , 4.78491 , 4.75889 , 4.51846 , 3.97709 , 3.33132 , 2.80862 , 2.57649 , 2.55126 , 2.54777 , 2.54739 , 2.54922 , 2.66343 , 3.07111 , 3.2255 , 3.22986 , 3.23078 , 3.23203 , 3.23294 , 3.23537 , 3.21973 , 2.95042 , 2.91242 , 2.91004 , 2.90947 , 2.90899 , 2.90853 , 2.91554 , 2.97156 , 3.25901 , 3.28362 , 3.28625 , 3.28691 , 3.28814 , 3.28975 , 3.27907 , 3.34019 , 2.65895 , 2.65895 , 2.65895 , 2.65895 , 2.69101 , 2.8367 , 2.99297 , 3.2213 , 3.48956 , 3.77649 , 3.94259 , 4.04836 , 4.06003 , 4.04678 , 4.03006 , 4.01132 , 4.00538 , 3.99115 , 3.98283 , 3.98239 , 3.98555 , 3.99775 , 4.04767 , 4.19966 , 4.39013 , 4.58501 , 4.61574 , 4.61917 , 4.61865 , 4.61179 , 4.44703 , 3.98127 , 3.46334 , 3.06014 , 2.89892 , 2.88314 , 2.88379 , 2.88527 , 2.893 , 2.93361 , 2.85747 , 2.88729 , 2.8829 , 2.88092 , 2.87967 , 2.87831 , 2.8744 , 2.88799 , 3.1707 , 3.21138 , 3.21066 , 3.21106 , 3.21155 , 3.21235 , 3.21508 , 3.12525 , 2.76162 , 2.73369 , 2.73271 , 2.73178 , 2.73081 , 2.73205 , 2.74046 , 2.67569 , 2.65895 , 2.65895 , 2.65895 , 2.65895 , 2.67221 , 2.76412 , 2.92039 , 3.12015 , 3.36172 , 3.58558 , 3.70717 , 3.75593 , 3.75125 , 3.74594 , 3.74713 , 3.87444 , 4.14455 , 4.28559 , 4.31413 , 4.3187 , 4.32382 , 4.33286 , 4.35921 , 4.40964 , 4.5399 , 4.56934 , 4.57381 , 4.57381 , 4.57381 , 4.57381 , 4.43032 , 4.05858 , 3.56164 , 3.18072 , 3.05198 , 3.0508 , 3.04979 , 3.05086 , 3.05201 , 3.01121 , 2.79952 , 2.74981 , 2.74981 , 2.74981 , 2.74981 , 2.74981 , 2.74981 , 2.8431 , 3.18425 , 3.27687 , 3.27687 , 3.27687 , 3.27687 , 3.27687 , 3.27613 , 3.11467 , 2.6591 , 2.50112 , 2.49984 , 2.49968 , 2.49957 , 2.49975 , 2.49759 , 2.49453 , 2.65895 , 2.65895 , 2.65895 , 2.65895 , 2.65895 , 2.71095 , 2.86024 , 3.04089 , 3.2449 , 3.42929 , 3.54264 , 3.55125 , 3.54829 , 3.54362 , 3.61296 , 3.85603 , 4.13762 , 4.39244 , 4.47284 , 4.47621 , 4.47669 , 4.47684 , 4.47684 , 4.47684 , 4.57281 , 4.57381 , 4.57381 , 4.57381 , 4.57381 , 4.57381 , 4.45945 , 4.07869 , 3.57022 , 3.16716 , 3.05333 , 3.05333 , 3.05333 , 3.05333 , 3.05333 , 3.00874 , 2.79479 , 2.74981 , 2.74981 , 2.74981 , 2.74981 , 2.74981 , 2.74981 , 2.84408 , 3.18264 , 3.27687 , 3.27687 , 3.27687 , 3.27687 , 3.27687 , 3.27568 , 3.11068 , 2.65722 , 2.49156 , 2.49018 , 2.49018 , 2.49018 , 2.49018 , 2.49018 , 2.49018 , 2.65895 , 2.65895 , 2.65895 , 2.65895 , 2.65895 , 2.68242 , 2.82815 , 3.00042 , 3.19315 , 3.37951 , 3.50832 , 3.50832 , 3.50832 , 3.50832 , 3.6071 , 3.84041 , 4.14215 , 4.39208 , 4.47684 , 4.47684 , 4.47684 , 4.47684 , 4.47684 , 4.47684 , 4.57381 , 4.57381 , 4.57381 , 4.57381 , 4.57381 , 4.57381 , 4.46131 , 4.07477 , 3.56309 , 3.1589 , 3.05333 , 3.05333 , 3.05333 , 3.05333 , 3.05333 , 3.00849 , 2.79467 , 2.74981 , 2.74981 , 2.74981 , 2.74981 , 2.74981 , 2.74981 , 2.84393 , 3.18276 , 3.27687 , 3.27687 , 3.27687 , 3.27687 , 3.27687 , 3.27549 , 3.11071 , 2.65643 , 2.4915 , 2.49018 , 2.49018 , 2.49018 , 2.49018 , 2.49018 , 2.49018 , 2.65895 , 2.65895 , 2.65895 , 2.65895 , 2.65895 , 2.67024 , 2.82646 , 2.9828 , 3.1788 , 3.3621 , 3.50601 , 3.50832 , 3.50832 , 3.50832 , 3.61545 , 3.84518 , 4.14217 , 4.38675 , 4.47684 , 4.47684 , 4.47684 , 4.47684 , 4.47684 , 4.47684 , 4.57381 , 4.57381 , 4.57381 , 4.57381 , 4.57381 , 4.57381 , 4.46107 , 4.07529 , 3.56236 , 3.15822 , 3.05333 , 3.05333 , 3.05333 , 3.05333 , 3.05333 , 3.00853 , 2.79471 , 2.74981 , 2.74981 , 2.74981 , 2.74981 , 2.74981 , 2.74981 , 2.84393 , 3.18284 , 3.27687 , 3.27687 , 3.27687 , 3.27687 , 3.27687 , 3.27554 , 3.1108 , 2.65644 , 2.4915 , 2.49018 , 2.49018 , 2.49018 , 2.49018 , 2.49018 , 2.49018 , 2.77635 , 2.7768 , 2.77668 , 2.77518 , 2.77022 , 2.76503 , 2.82343 , 2.97967 , 3.15827 , 3.33804 , 3.42837 , 3.44459 , 3.45511 , 3.47453 , 3.57734 , 3.80505 , 4.10004 , 4.34418 , 4.47157 , 4.47684 , 4.47684 , 4.47684 , 4.47684 , 4.47684 , 4.57381 , 4.57381 , 4.57381 , 4.57381 , 4.57381 , 4.57234 , 4.45433 , 4.07265 , 3.56069 , 3.15687 , 3.05333 , 3.05333 , 3.05333 , 3.05333 , 3.05333 , 3.01191 , 2.79676 , 2.74981 , 2.74981 , 2.74981 , 2.74981 , 2.74981 , 2.75003 , 2.84532 , 3.18448 , 3.27687 , 3.27687 , 3.27687 , 3.27687 , 3.27687 , 3.27556 , 3.11164 , 2.65697 , 2.49254 , 2.49018 , 2.49018 , 2.49018 , 2.49018 , 2.49018 , 2.49018 , 2.93098 , 2.93122 , 2.93079 , 2.92638 , 2.92102 , 2.91949 , 2.91267 , 2.97309 , 3.1175 , 3.18182 , 3.20704 , 3.22754 , 3.23751 , 3.28326 , 3.41923 , 3.64876 , 3.96096 , 4.26022 , 4.45287 , 4.47684 , 4.47684 , 4.47684 , 4.47684 , 4.46957 , 4.50752 , 4.49867 , 4.49414 , 4.49494 , 4.49673 , 4.4922 , 4.38579 , 4.03846 , 3.55143 , 3.15645 , 3.0722 , 3.06935 , 3.06845 , 3.06891 , 3.08299 , 3.06031 , 2.89403 , 2.86657 , 2.87348 , 2.87071 , 2.86812 , 2.8644 , 2.8494 , 2.91315 , 3.2111 , 3.27687 , 3.27687 , 3.27687 , 3.27687 , 3.27687 , 3.2716 , 3.1109 , 2.66935 , 2.49214 , 2.49018 , 2.49018 , 2.49018 , 2.49018 , 2.49018 , 2.49018 , 3.08644 , 3.0864 , 3.08221 , 3.07703 , 3.07549 , 3.06885 , 3.06627 , 2.99119 , 2.96127 , 2.93497 , 2.90545 , 2.90143 , 2.91394 , 2.98882 , 3.14497 , 3.43318 , 3.80244 , 4.15701 , 4.4147 , 4.47679 , 4.47684 , 4.47684 , 4.45068 , 4.32413 , 4.26151 , 4.18998 , 4.17477 , 4.17359 , 4.17603 , 4.17613 , 4.13021 , 3.95626 , 3.53118 , 3.32994 , 3.28898 , 3.28093 , 3.27917 , 3.27876 , 3.29403 , 3.35116 , 3.33065 , 3.39428 , 3.40235 , 3.39681 , 3.39462 , 3.39461 , 3.37788 , 3.29067 , 3.40145 , 3.31787 , 3.29771 , 3.29709 , 3.29696 , 3.29781 , 3.28544 , 3.02268 , 2.62556 , 2.41352 , 2.38281 , 2.38236 , 2.38298 , 2.3837 , 2.38016 , 2.4116 , 3.23966 , 3.23785 , 3.23318 , 3.23163 , 3.2248 , 3.22222 , 3.14754 , 2.99107 , 2.82343 , 2.67566 , 2.59391 , 2.54477 , 2.55029 , 2.65194 , 2.84309 , 3.19383 , 3.63723 , 4.03359 , 4.31999 , 4.37622 , 4.37622 , 4.37622 , 4.34292 , 4.16786 , 3.93358 , 3.79333 , 3.75337 , 3.74721 , 3.74596 , 3.7427 , 3.7273 , 3.67006 , 3.72522 , 3.678 , 3.66519 , 3.6649 , 3.66634 , 3.66969 , 3.69028 , 3.80349 , 3.9894 , 4.07592 , 4.10957 , 4.10972 , 4.11298 , 4.11381 , 4.07631 , 3.97772 , 3.67145 , 3.49832 , 3.47845 , 3.47831 , 3.47852 , 3.47847 , 3.43058 , 3.06903 , 2.37484 , 2.03365 , 1.9875 , 1.98551 , 1.98488 , 1.98518 , 1.98791 , 1.95518 , 3.3874 , 3.38897 , 3.38766 , 3.38102 , 3.37828 , 3.34086 , 3.1844 , 2.97972 , 2.75181 , 2.51126 , 2.31698 , 2.22502 , 2.22247 , 2.31933 , 2.59112 , 3.01303 , 3.48387 , 3.9649 , 4.2938 , 4.37622 , 4.37622 , 4.37622 , 4.32341 , 4.07607 , 3.74117 , 3.49579 , 3.43189 , 3.42551 , 3.42342 , 3.42002 , 3.40965 , 3.51181 , 3.77834 , 3.88126 , 3.87641 , 3.87637 , 3.87697 , 3.87835 , 3.89374 , 4.06534 , 4.40199 , 4.59009 , 4.62721 , 4.63553 , 4.6379 , 4.63514 , 4.58402 , 4.3215 , 3.82907 , 3.51842 , 3.49851 , 3.49851 , 3.49851 , 3.49851 , 3.45332 , 3.04273 , 2.34552 , 1.92411 , 1.87765 , 1.87765 , 1.87765 , 1.87765 , 1.87765 , 1.87765 , 3.54117 , 3.54286 , 3.5368 , 3.53419 , 3.50845 , 3.38228 , 3.20369 , 2.98176 , 2.70418 , 2.42176 , 2.15691 , 1.99434 , 1.97982 , 2.10908 , 2.43489 , 2.88606 , 3.42717 , 3.93478 , 4.28603 , 4.37622 , 4.37622 , 4.37622 , 4.31272 , 4.05044 , 3.68825 , 3.41083 , 3.34602 , 3.34602 , 3.34602 , 3.34602 , 3.34677 , 3.479 , 3.76196 , 3.89213 , 3.89213 , 3.89213 , 3.89213 , 3.89213 , 3.90628 , 4.11615 , 4.52986 , 4.73462 , 4.7547 , 4.7549 , 4.7549 , 4.75457 , 4.71674 , 4.41556 , 3.84682 , 3.52745 , 3.49851 , 3.49851 , 3.49851 , 3.49851 , 3.45229 , 3.04092 , 2.33809 , 1.92213 , 1.87765 , 1.87765 , 1.87765 , 1.87765 , 1.87765 , 1.87765 , 3.67886 , 3.67886 , 3.67886 , 3.66481 , 3.5599 , 3.40376 , 3.22617 , 2.98904 , 2.69654 , 2.38069 , 2.10294 , 1.92181 , 1.9047 , 2.04169 , 2.37015 , 2.85243 , 3.40683 , 3.9279 , 4.28399 , 4.37622 , 4.37622 , 4.37622 , 4.31156 , 4.04679 , 3.6821 , 3.4057 , 3.34602 , 3.34602 , 3.34602 , 3.34602 , 3.34602 , 3.47764 , 3.76064 , 3.89213 , 3.89213 , 3.89213 , 3.89213 , 3.89213 , 3.90431 , 4.11204 , 4.53702 , 4.74394 , 4.7549 , 4.7549 , 4.7549 , 4.7549 , 4.7251 , 4.41276 , 3.84533 , 3.52678 , 3.49851 , 3.49851 , 3.49851 , 3.49851 , 3.4523 , 3.04082 , 2.33763 , 1.92171 , 1.87765 , 1.87765 , 1.87765 , 1.87765 , 1.87765 , 1.87765 , 3.67886 , 3.67886 , 3.67886 , 3.67886 , 3.57686 , 3.42057 , 3.24233 , 2.99568 , 2.69779 , 2.37746 , 2.09267 , 1.91594 , 1.90099 , 2.03337 , 2.3608 , 2.8461 , 3.40364 , 3.92746 , 4.2812 , 4.37622 , 4.37622 , 4.37622 , 4.31166 , 4.04741 , 3.68187 , 3.40567 , 3.34602 , 3.34602 , 3.34602 , 3.34602 , 3.34602 , 3.47749 , 3.76074 , 3.89213 , 3.89213 , 3.89213 , 3.89213 , 3.89213 , 3.90399 , 4.11098 , 4.53561 , 4.74412 , 4.7549 , 4.7549 , 4.7549 , 4.7549 , 4.72504 , 4.4118 , 3.84449 , 3.52668 , 3.49851 , 3.49851 , 3.49851 , 3.49851 , 3.45242 , 3.04183 , 2.33759 , 1.92197 , 1.87765 , 1.87765 , 1.87765 , 1.87765 , 1.87765 , 1.87765 , 3.67886 , 3.67886 , 3.67886 , 3.67886 , 3.58545 , 3.42906 , 3.24459 , 2.9936 , 2.69691 , 2.37895 , 2.0943 , 1.9139 , 1.90099 , 2.03391 , 2.3669 , 2.84513 , 3.40467 , 3.91985 , 4.28146 , 4.37622 , 4.37622 , 4.37622 , 4.30827 , 4.04972 , 3.6839 , 3.40844 , 3.34602 , 3.34602 , 3.34602 , 3.34602 , 3.34602 , 3.47878 , 3.76107 , 3.89213 , 3.89213 , 3.89213 , 3.89213 , 3.89213 , 3.90454 , 4.11276 , 4.53633 , 4.74337 , 4.7549 , 4.7549 , 4.7549 , 4.7549 , 4.72333 , 4.41337 , 3.84739 , 3.52775 , 3.49851 , 3.49851 , 3.49851 , 3.49851 , 3.44993 , 3.04409 , 2.3415 , 1.92372 , 1.87765 , 1.87765 , 1.87765 , 1.87765 , 1.87765 , 1.87765 , 3.67886 , 3.67886 , 3.67886 , 3.67886 , 3.59175 , 3.4353 , 3.24932 , 2.99106 , 2.68072 , 2.36172 , 2.08371 , 1.90943 , 1.90099 , 2.01927 , 2.35036 , 2.8351 , 3.39265 , 3.92971 , 4.28778 , 4.37622 , 4.37622 , 4.37622 , 4.31222 , 4.03266 , 3.69692 , 3.40217 , 3.34602 , 3.34602 , 3.34602 , 3.34602 , 3.34602 , 3.48441 , 3.75431 , 3.89213 , 3.89213 , 3.89213 , 3.89213 , 3.89213 , 3.90155 , 4.12165 , 4.52533 , 4.7457 , 4.7549 , 4.7549 , 4.7549 , 4.7549 , 4.72593 , 4.39481 , 3.8625 , 3.52383 , 3.49851 , 3.49851 , 3.49851 , 3.49851 , 3.45331 , 3.01905 , 2.3618 , 1.91812 , 1.87765 , 1.87765 , 1.87765 , 1.87765 , 1.87765 , 1.87765 , 3.67886 , 3.67886 , 3.67886 , 3.67886 , 3.60185 , 3.44571 , 3.26698 , 2.99993 , 2.66822 , 2.31868 , 2.03523 , 1.90456 , 1.90099 , 1.97733 , 2.28115 , 2.79852 , 3.44077 , 3.99931 , 4.31698 , 4.37622 , 4.37622 , 4.37622 , 4.3314 , 4.08563 , 3.63694 , 3.38319 , 3.34602 , 3.34602 , 3.34602 , 3.34602 , 3.34602 , 3.44624 , 3.78961 , 3.89213 , 3.89213 , 3.89213 , 3.89213 , 3.89213 , 3.89771 , 4.06735 , 4.57628 , 4.74924 , 4.7549 , 4.7549 , 4.7549 , 4.7549 , 4.73569 , 4.47142 , 3.779 , 3.51454 , 3.49851 , 3.49851 , 3.49851 , 3.49851 , 3.46817 , 3.11783 , 2.25452 , 1.90356 , 1.87765 , 1.87765 , 1.87765 , 1.87765 , 1.87765 , 1.87765 , };



  for(int i=0; i<N*N;i++)
    {
        alturas[i].y = v[i];
    }
}

Vetor calculaNormal(Vetor p1, Vetor p2, Vetor p3){
    Vetor u,v;
    Vetor normal;

    u.x = p2.x - p1.x;
    u.y = p2.y - p1.y;
    u.z = p2.z - p1.z;

    v.x = p3.x - p1.x;
    v.y = p3.y - p1.y;
    v.z = p3.z - p1.z;

    normal.x = u.y*v.z - v.y*u.z;
    normal.y = u.z*v.x - v.z*u.x;
    normal.z = u.x*v.y - v.x*u.y;

    return normal;
}

normalize2(Vetor *vec){

    float tamAtual = sqrt(vec->x*vec->x + vec->y*vec->y + vec->z*vec->z);

    vec->x = vec->x/tamAtual;
    vec->y = vec->y/tamAtual;
    vec->z = vec->z/tamAtual;
}

void Terreno::desenhar(){

Vetor normal;
glBegin(GL_TRIANGLES);
    for(int i=0; i<N-1; i++)
    for(int j=0; j<N-1; j++)
    {
        float r=0.0f, g=0.5f, b=0.0f;
        if(alturas[IX(i,j)].y>0.5)
        {
            r = 0.5f;
            g = 0.3f;
            b = 0.1f;
        }
        if(alturas[IX(i,j)].y>3.5)
        {
            r = 0.8f;
            g = 0.8f;
            b = 0.8f;
        }
        /*
        r = alturas[IX(i,j)].y/5;
        g = 0.8f;
        b = alturas[IX(i,j)].y/10*/;

        normal = calculaNormal(alturas[IX(i,j)],alturas[IX(i,j+1)],alturas[IX(i+1,j)]);
        normalize2(&normal);
        glNormal3f(normal.x,normal.y,normal.z);
        glColor3f(r,g,b);
        glVertex3f(alturas[IX(i,j)].x,alturas[IX(i,j)].y,alturas[IX(i,j)].z);
        glVertex3f(alturas[IX(i,j+1)].x,alturas[IX(i,j+1)].y,alturas[IX(i,j+1)].z);
        glVertex3f(alturas[IX(i+1,j)].x,alturas[IX(i+1,j)].y,alturas[IX(i+1,j)].z);

        normal = calculaNormal(alturas[IX(i+1,j)],alturas[IX(i,j+1)],alturas[IX(i+1,j+1)]);
        normalize2(&normal);
        glNormal3f(normal.x,normal.y,normal.z);
        glColor3f(r,g,b);
        glVertex3f(alturas[IX(i+1,j)].x,alturas[IX(i+1,j)].y,alturas[IX(i+1,j)].z);
        glVertex3f(alturas[IX(i,j+1)].x,alturas[IX(i,j+1)].y,alturas[IX(i,j+1)].z);
        glVertex3f(alturas[IX(i+1,j+1)].x,alturas[IX(i+1,j+1)].y,alturas[IX(i+1,j+1)].z);

    }
glEnd();
glBegin(GL_POINTS);
    glColor3f(0.0,1.0,0.0);
glEnd();
}

void Terreno::inicializaAlturas(){
    for(int i=0; i<N; i++)
    for(int j=0; j<N; j++)
    {
        alturas[IX(i,j)].x = float(i*(10.0f/float(N))) - 5.0f;
        alturas[IX(i,j)].y = 0;//rand()%3;
        alturas[IX(i,j)].z = float(j*(10.0f/float(N))) - 5.0f;
        alturas0[IX(i,j)].x = float(i*(10.0f/float(N))) - 5.0f;
        alturas0[IX(i,j)].y = 0;//rand()%3;
        alturas0[IX(i,j)].z = float(j*(10.0f/float(N))) - 5.0f;
        alturasY[IX(i,j)] = 0;
        alturasY0[IX(i,j)] = 0;//rand()%3;
    }
}

float RandomFloat(float a, float b) {
    float random = ((float) rand()) / (float) RAND_MAX;
    float diff = b - a;
    float r = random * diff;
    return a + r;
}

void Terreno::hillAlgorithm(int numberHills){

    int hillRadiusMin = N/8;
    int hillRadiusMax = N/5.33;


    float hillMinHeight = 0.0;
    float hillMaxHeight = 59.0;

    float maxValueGenerated=-1;
    float minValueGenerated=-1;

    //srand ( time(NULL) );
    for(int h=0; h<numberHills; h++)
    {
        int centerCollum = rand()%N;
        //cout<<centerCollum<<endl;
        int centerRow = rand()%N;
        //cout<<centerRow<<endl;
        float hillHeight = RandomFloat(hillMinHeight,hillMaxHeight);
        int hillRadius = rand()%(hillRadiusMax - hillRadiusMin) + hillRadiusMin;

        for(int c = centerCollum - hillRadius; c<centerCollum + hillRadius; c++)
        for(int l = centerRow- hillRadius; l<centerRow + hillRadius; l++)
        {

            if(c<0 || c>=N || l<0 || l>=N)
                continue;

                float r2 = hillRadius*hillRadius;
                float x2x1 = centerCollum - c;
                float y2y1 = centerRow - l;
                float altura = r2 - x2x1*x2x1 - y2y1*y2y1;

                if(altura<0)
                    continue;

                float fator = altura/r2;

                alturas[IX(c,l)].y += hillHeight*fator;
                //if(alturas[IX(c,l)].y>20.0)
                    //alturas[IX(c,l)].y=20.0;

                if(maxValueGenerated==-1 || maxValueGenerated<alturas[IX(c,l)].y)
                    maxValueGenerated = alturas[IX(c,l)].y;

                if(minValueGenerated==-1 || minValueGenerated>alturas[IX(c,l)].y)
                    minValueGenerated = alturas[IX(c,l)].y;
        }
    }

    normalizeHeight(maxValueGenerated, minValueGenerated);
}

void Terreno::faultingDefaultFunction(int i, int j,float a, float b, float c, float displacement){

    if(a*alturas[IX(i,j)].x + b*alturas[IX(i,j)].z - c>0)
        alturas[IX(i,j)].y+=displacement;
    else
        alturas[IX(i,j)].y-=displacement;
}
void Terreno::faultingSinFunction(int i, int j,float a, float b, float c, float displacement){

    float dist = a*alturas[IX(i,j)].x + b*alturas[IX(i,j)].z - c;

        if(dist>0){
            if(dist<PI/2)
            alturas[IX(i,j)].y+=sin(dist)*displacement;
            else
            alturas[IX(i,j)].y+=displacement;
        }else{
            if(dist>-PI/2)
            alturas[IX(i,j)].y+=sin(dist)*displacement;
            else
            alturas[IX(i,j)].y-=displacement;
        }
}

void Terreno::faultingCosFunction(int i, int j,float a, float b, float c, float displacement){

    float dist = a*alturas[IX(i,j)].x + b*alturas[IX(i,j)].z - c;

    if(dist<PI/2 && dist>-PI/2)
        alturas[IX(i,j)].y+=cos(dist)*displacement;

}

void Terreno::faulting(int iterations){

    float w = alturas[IX(N-1,0)].x - alturas[IX(0,0)].x;
    float l = alturas[IX(0,N-1)].z - alturas[IX(0,0)].z;

    float maxValueGenerated=0;
    float minValueGenerated=0;
    for(int k=0; k<iterations; k++)
    {
        int v = rand()%360;
        float a = sin(v);
        float b = cos(v);
        float d = sqrt(w*w + l*l);
        float c = rand()%(int)d - d/2;
        float displacement = 0.3f;

        for(int i=0; i<N; i++)
        for(int j=0; j<N; j++)
        {
            ///faultingDefaultFunction(i,j,a,b,c,displacement);
            faultingSinFunction(i,j,a,b,c,displacement);
            ///faultingCosFunction(i,j,a,b,c,displacement);

            if(maxValueGenerated<alturas[IX(i,j)].y)
                maxValueGenerated = alturas[IX(i,j)].y;

            if(minValueGenerated>alturas[IX(i,j)].y)
                minValueGenerated = alturas[IX(i,j)].y;
        }
    }
    normalizeHeight(maxValueGenerated, minValueGenerated);
}

float Terreno::findMaxValue(bool maxOrMin){

    float maxValue=0;
    float minValue=alturas[0].y;

    for(int i=0; i<alturas.size(); i++)
    {
        if(alturas[i].y>maxValue)
            maxValue = alturas[i].y;
        if(alturas[i].y<minValue)
            minValue = alturas[i].y;
    }

    return maxOrMin?maxValue:minValue;
}

void Terreno::diamond_squareStep(int chunk, float dHeight, float r){
    cout<<"square"<<endl;
    for(int i=0; i<N-1; i+=chunk)
    for(int j=0; j<N-1; j+=chunk)
    {
        float randHeight =  RandomFloat(-dHeight/2, dHeight/2);
        //cout<<i<<" "<<j<<endl;
        alturas[IX(i+chunk/2,j+chunk/2)].y =
        (alturas[IX(i,j)].y + alturas[IX(i+chunk,j)].y +
        alturas[IX(i,j+chunk)].y + alturas[IX(i+chunk,j+chunk)].y)/4 + randHeight;
    }
}

void Terreno::diamond_diamondStep(int chunk, float dHeight, float r){
    cout<<"diamond"<<endl;
    int half = chunk/2;
    for(int i=0; i<N; i+=half)
    for(int j=(i+half)%chunk; j<N; j+=chunk)
    {
        float randHeight = RandomFloat(-dHeight/2, dHeight/2);
        float newHeight = 0;
        int cont=0;

        newHeight+=i>0?alturas[IX(i-half,j)].y:0;
        cont+=i>0?1:0;
        newHeight+=i<N-1?alturas[IX(i+half,j)].y:0;
        cont+=i<N-1?1:0;
        newHeight+=j>0?alturas[IX(i,j-half)].y:0;
        cont+=j>0?1:0;
        newHeight+=j<N-1?alturas[IX(i,j+half)].y:0;
        cont+=j<N-1?1:0;

        alturas[IX(i,j)].y = (newHeight/cont) + randHeight;
        //cout<<alturas[IX(i,j)]<<endl;
    }
}

void Terreno::diamond(int iterations){

    int chunk = (N/2);
    float r = chunk*0.01;
    float dHeight = 20;
    /*alturas[IX(0,0)].y = 40;//RandomFloat(0,40);///50+RandomFloat(-r,r);
    alturas[IX(N-1,0)].y = 40;//RandomFloat(0,40);///50+RandomFloat(-r,r);
    alturas[IX(0,N-1)].y = 40;//RandomFloat(0,40);///80+RandomFloat(-r,r);
    alturas[IX(N-1,N-1)].y = 40;//RandomFloat(0,40);///70+RandomFloat(r,r);*/
    alturas[IX((N-1)/2,(N-1)/2)].y = 20;
    //recursiveDiamond(iterations, 0, 0, N-1, 50);

    cout<<"aoba"<<endl;
    for(int i=0; i<iterations; i++)
    while(chunk>1){
        //\float half = chunck/2;
        diamond_squareStep(chunk,dHeight,r);
        diamond_diamondStep(chunk,dHeight,r);
        chunk/=2;
        dHeight/=2;
    }

    float maxVal = findMaxValue(true);
    float minVal = findMaxValue(false);

    normalizeHeight(maxVal,minVal);
}

void Terreno::recursiveDiamond(int iterations, int x0,int y0, int h, float dHeight){

    //cout<<iterations<<endl;
    if(iterations>0)
    {

        float randHeight =  RandomFloat(-dHeight/2, dHeight/2);
        float newHeight =
        (alturas[IX(x0,y0)].y + alturas[IX(x0,y0+h)].y + alturas[IX(x0+h,y0)].y + alturas[IX(x0+h,y0+h)].y)*0.25 + randHeight*0.5;

        randHeight =  RandomFloat(0.0f, dHeight);
        float newHeight1 = (alturas[IX(x0,y0)].y + alturas[IX(x0+h,y0)].y)*0.5 + dHeight*0.5;
        randHeight =  RandomFloat(0.0f, dHeight);
        float newHeight2 = (alturas[IX(x0,y0+h)].y + alturas[IX(x0+h,y0+h)].y)*0.5 + dHeight*0.5;
        randHeight =  RandomFloat(0.0f, dHeight);
        float newHeight3 = (alturas[IX(x0,y0)].y + alturas[IX(x0,y0+h)].y)*0.5 + dHeight*0.5;
        randHeight =  RandomFloat(0.0f, dHeight);
        float newHeight4 = (alturas[IX(x0+h,y0)].y + alturas[IX(x0+h,y0+h)].y)*0.5 + dHeight*0.5;


        alturas[IX(x0+h/2, y0+h/2)].y = newHeight;
        alturas[IX(x0+h/2, y0)].y = newHeight1;
        alturas[IX(x0+h/2, y0+h)].y = newHeight2;
        alturas[IX(x0, y0+h/2)].y = newHeight3;
        alturas[IX(x0+h, y0+h/2)].y = newHeight4;

        dHeight*=0.5;
        h/=2;
        recursiveDiamond(iterations-1,x0,y0,h,dHeight);
        recursiveDiamond(iterations-1,x0+h,y0,h,dHeight);
        recursiveDiamond(iterations-1,x0+h,y0+h,h,dHeight);
        recursiveDiamond(iterations-1,x0,y0+h,h,dHeight);
    }
}

void Terreno::valueNoise(vector<float> &values, unsigned seed){
    std::random_device rd;
    std::default_random_engine eng(rd());
    std::uniform_real_distribution<float> distr(0, 1);
    for(unsigned i=0; i<120; i++)
    {
        values.push_back(distr(eng));
    }
}


float Terreno::coslerp(float a,float b,float alpha){
    float tRemapCosine = (1 - cos(alpha * M_PI)) * 0.5;
    return lerp(a, b, tRemapCosine);
}

float Terreno::lerp(float a,float b,float alpha){
    return a*(1-alpha) + b*(alpha);
}

void Terreno::valueNoise2d(vector<float> &values, unsigned seed){
    std::random_device rd;
    std::default_random_engine eng(rd());
    std::uniform_real_distribution<float> distr(0, 1);
    for(unsigned i=0; i<N; i++)
    for(unsigned j=0; j<N; j++)
    {
        values.push_back(distr(eng));
    }
}

float Terreno::noise2d(vector<float> &values, float tx,float ty){
    if(tx<=0) tx+=5;//cout<<"oi"<<endl;
    int xi = (int)tx;
    int xmin = xi%(N+1);
    float alpha = (tx - (float)xmin);

    if(ty<=0) ty+=5;//cout<<"oi"<<endl;
    int yi = (int)ty;
    int ymin = yi%(N+1);
    float beta = (ty - (float)ymin);

    float a = values[IX(xmin,ymin)];
    float b = values[IX(xmin+1,ymin)];
    float c = values[IX(xmin,ymin+1)];
    float d = values[IX(xmin+1,ymin+1)];

    float lerp1 = coslerp(a,b,alpha);
    float lerp2 = coslerp(c,d,alpha);
    float bilerp = coslerp(lerp1,lerp2,beta);
    return bilerp;
}

float Terreno::noise(vector<float> &values, float t){
    if(t<=0) t+=5;//cout<<"oi"<<endl;
    int xi = (int)t;
    int xmin = xi%N;
    float alpha = (t - (float)xmin);
    float a = values[xmin];
    float b = values[xmin+1];

    return coslerp(a,b,alpha);
}

void Terreno::perlinNoise(){

    vector<float> noiseValues;
    valueNoise2d(noiseValues);

    for(int i=0; i<N; i++)
    {
        alturas[IX(i,0)].y += (noise(noiseValues,alturas[IX(i,0)].x))+
                              (noise(noiseValues,alturas[IX(i,0)].x/2))+
                              (noise(noiseValues,alturas[IX(i,0)].x/4))+
                              (noise(noiseValues,alturas[IX(i,0)].x/8));
    }

    /*for(int i=0; i<N; i++)
    for(int j=0; j<N; j++)
    {
        alturas[IX(i,j)].y += (noise2d(noiseValues,alturas[IX(i,j)].x,alturas[IX(i,j)].z))+
                              (noise2d(noiseValues,alturas[IX(i,j)].x/2,alturas[IX(i,j)].z/2))+
                              (noise2d(noiseValues,alturas[IX(i,j)].x/4,alturas[IX(i,j)].z/4))+
                              (noise2d(noiseValues,alturas[IX(i,j)].x/8,alturas[IX(i,j)].z/8));
    }*/
}

void Terreno::cubo(){

    for(int i=N/2; i<N/2+N/8; i++)
    for(int j=N/2; j<N/2+N/8; j++)
    alturas[IX(i,j)].y = 50;

    normalizeHeight(50,0);
}

void Terreno::terrenao(){

    for(int i=0; i<N; i++)
    for(int j=0; j<N; j++)
    alturas[IX(i,j)].y = abs(N/2 - i)*5;

    normalizeHeight(N*5/2,0);
}

void Terreno::variosCubos(){

    bool vai=true;
    int i=0,j=0;
    for(i=0; i<N; i+=N/4)
    for(j=0; j<N; j+=N/4)
    {
        float h=RandomFloat(30,50);

        for(int k=i; k<i+N/8;k++)
        for(int l=j; l<j+N/8;l++)
        {
            alturas[IX(k,l)].y = h;
        }
    }

    normalizeHeight(50,0);

}

void Terreno::cubosUnidos(){

    bool vai=true;
    int i=0,j=0;
    for(i=0; i<N; i+=N/8)
    for(j=0; j<N; j+=N/8)
    {
        float h=RandomFloat(30,50);

        for(int k=i; k<i+N/8;k++)
        for(int l=j; l<j+N/8;l++)
        {
            alturas[IX(k,l)].y = h;
        }
    }

    normalizeHeight(50,0);

}



void Terreno::zeraTerreno(){

    for(int i=0; i<N; i++)
    for(int j=0; j<N; j++)
    {
        alturas[IX(i,j)].y = 0;
        alturas0[IX(i,j)].y = 0;
    }
}


void Terreno::salvarTerreno(){
}

void Terreno::normalizeHeight(float maxH, float minH){

    for(int i=0; i<N; i++)
    for(int j=0; j<N; j++)
    {
        ///Normalize
        alturas[IX(i,j)].y = (alturas[IX(i,j)].y - minH)/(maxH - minH);
        ///Flatering
        alturas[IX(i,j)].y *= alturas[IX(i,j)].y;
        ///Put in the range 0 to 5
        alturas[IX(i,j)].y *= 5;

        //cout<<alturas[IX(i,j)].y<<endl;
    }
}

Terreno::~Terreno(){

}
